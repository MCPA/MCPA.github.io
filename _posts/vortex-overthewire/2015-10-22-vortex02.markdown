---
layout: post
title:  "Vortex Level 2"
date:   2015-10-22 02:20
categories: vortex wargame web overthewire
author: Natri
---
This is a solution guide to the Vortex Level 02 at <a href="http://overthewire.org/wargames/vortex/vortex2.html">overthewire</a>. This write-up was created on 21 October 2015.

<!--break-->

The prompt hints at "create a special tar file", ok we are going to be working with tar files.  Looking at the source code below we see that <strong>/bin/tar</strong> is executed with <strong>execv</strong>.

{% highlight c linenos %}
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>

int main(int argc, char **argv)
{
        char *args[] = { "/bin/tar", "cf", "/tmp/ownership.$$.tar", argv[1], argv[2], argv[3] };
        execv(args[0], args);
}
{% endhighlight %}

Lets log into the server and take a look at the permissions <strong>vortex2</strong> runs at and the permissions of the password file.

{% highlight bash %}
vortex2@melinda:/vortex$ ls -la /vortex/vortex2
-r-sr-x--- 1 vortex3 vortex2 7295 Nov 14  2014 /vortex/vortex2
vortex2@melinda:/vortex$ ls -la /etc/vortex_pass/vortex3
-r-------- 1 vortex3 vortex3 10 Nov 14  2014 /etc/vortex_pass/vortex3
{% endhighlight %}

That is good the program runs with vortex3 permissions and the password can be opened by vortex3.

<h2>Methodology</h2>

1. Establish connection
1. Get shell PID
2. Run program to create tarball with the password inside and be able to open it with the permissions of vortex2
3. Open tarball and get password
4. Cleanup

<h2>Establish connection</h2>
Standard connection used.

{% highlight python %}
from pwn import *
import time

HOST = 'vortex.labs.overthewire.org'
USERNAME = 'vortex2'
PASS = ''

s = ssh(host=HOST, user=USERNAME, password=PASS)

location = "/vortex"
file_name = '%s/vortex2' % location
password_file = '/etc/vortex_pass/vortex3'
{% endhighlight %}

<h2>Get shell PID</h2>
<strong>NOTE:</strong>Did not need to actually get PID, through testing actually found out that <em>execv</em> does not evaluate $$ like bash does and just processes it as a normal character.  I have left this in to show flaw in thought process.

Since it is hard coded that the name of the file will be <strong>/tmp/ownership.\$\$.tar</strong>; the <em>$$</em> in the file name is the decimal process ID of the invoked shell [^1]

{% highlight python %}
shell_pid = s('echo $$')
{% endhighlight %}

<h2>Run program</h2>
The goal is to run this program that creates the tarball but make sure that when created it assigns the permissions of <em>vortex2</em> instead of the invoking permissions of <em>vortex3</em>.  To do this lets look at the [man page for tar](http://linuxcommand.org/man_pages/tar1.html).  Based on the options we should set the <strong>--mode</strong> with <em>'a+rw'</em>

<h2>Endnotes</h2>
[^1]: http://superuser.com/questions/247127/what-is-and-in-linux
